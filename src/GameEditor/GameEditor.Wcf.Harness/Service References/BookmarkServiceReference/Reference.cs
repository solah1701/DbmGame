//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GameEditor.Wcf.Harness.BookmarkServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Bookmarks", Namespace="http://schemas.datacontract.org/2004/07/GameCore.Wcf", ItemName="Bookmark")]
    [System.SerializableAttribute()]
    public class Bookmarks : System.Collections.Generic.List<GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmark> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bookmark", Namespace="http://schemas.datacontract.org/2004/07/GameCore.Wcf")]
    [System.SerializableAttribute()]
    public partial class Bookmark : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PublicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri UserLinkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Public {
            get {
                return this.PublicField;
            }
            set {
                if ((this.PublicField.Equals(value) != true)) {
                    this.PublicField = value;
                    this.RaisePropertyChanged("Public");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri UserLink {
            get {
                return this.UserLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLinkField, value) != true)) {
                    this.UserLinkField = value;
                    this.RaisePropertyChanged("UserLink");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserProfile", Namespace="http://schemas.datacontract.org/2004/07/GameCore.Wcf")]
    [System.SerializableAttribute()]
    public partial class UserProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri BookmarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri Bookmarks {
            get {
                return this.BookmarksField;
            }
            set {
                if ((object.ReferenceEquals(this.BookmarksField, value) != true)) {
                    this.BookmarksField = value;
                    this.RaisePropertyChanged("Bookmarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/GameCore.Wcf")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri BookmarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri Bookmarks {
            get {
                return this.BookmarksField;
            }
            set {
                if ((object.ReferenceEquals(this.BookmarksField, value) != true)) {
                    this.BookmarksField = value;
                    this.RaisePropertyChanged("Bookmarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BookmarkServiceReference.IBookmarkService")]
    public interface IBookmarkService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/DoWork", ReplyAction="http://tempuri.org/IBookmarkService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/DoWork", ReplyAction="http://tempuri.org/IBookmarkService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/GetPublicBookmarks", ReplyAction="http://tempuri.org/IBookmarkService/GetPublicBookmarksResponse")]
        GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmarks GetPublicBookmarks(string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/GetPublicBookmarks", ReplyAction="http://tempuri.org/IBookmarkService/GetPublicBookmarksResponse")]
        System.Threading.Tasks.Task<GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmarks> GetPublicBookmarksAsync(string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/GetUserPublicBookmarks", ReplyAction="http://tempuri.org/IBookmarkService/GetUserPublicBookmarksResponse")]
        GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmarks GetUserPublicBookmarks(string username, string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/GetUserPublicBookmarks", ReplyAction="http://tempuri.org/IBookmarkService/GetUserPublicBookmarksResponse")]
        System.Threading.Tasks.Task<GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmarks> GetUserPublicBookmarksAsync(string username, string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/GetUserBookmarks", ReplyAction="http://tempuri.org/IBookmarkService/GetUserBookmarksResponse")]
        GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmarks GetUserBookmarks(string username, string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/GetUserBookmarks", ReplyAction="http://tempuri.org/IBookmarkService/GetUserBookmarksResponse")]
        System.Threading.Tasks.Task<GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmarks> GetUserBookmarksAsync(string username, string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/GetUserProfile", ReplyAction="http://tempuri.org/IBookmarkService/GetUserProfileResponse")]
        GameEditor.Wcf.Harness.BookmarkServiceReference.UserProfile GetUserProfile(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/GetUserProfile", ReplyAction="http://tempuri.org/IBookmarkService/GetUserProfileResponse")]
        System.Threading.Tasks.Task<GameEditor.Wcf.Harness.BookmarkServiceReference.UserProfile> GetUserProfileAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/GetUser", ReplyAction="http://tempuri.org/IBookmarkService/GetUserResponse")]
        GameEditor.Wcf.Harness.BookmarkServiceReference.User GetUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/GetUser", ReplyAction="http://tempuri.org/IBookmarkService/GetUserResponse")]
        System.Threading.Tasks.Task<GameEditor.Wcf.Harness.BookmarkServiceReference.User> GetUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/PutUser", ReplyAction="http://tempuri.org/IBookmarkService/PutUserResponse")]
        void PutUser(string username, GameEditor.Wcf.Harness.BookmarkServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/PutUser", ReplyAction="http://tempuri.org/IBookmarkService/PutUserResponse")]
        System.Threading.Tasks.Task PutUserAsync(string username, GameEditor.Wcf.Harness.BookmarkServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/DeleteUser", ReplyAction="http://tempuri.org/IBookmarkService/DeleteUserResponse")]
        void DeleteUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/DeleteUser", ReplyAction="http://tempuri.org/IBookmarkService/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/GetBookmark", ReplyAction="http://tempuri.org/IBookmarkService/GetBookmarkResponse")]
        GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmark GetBookmark(string username, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/GetBookmark", ReplyAction="http://tempuri.org/IBookmarkService/GetBookmarkResponse")]
        System.Threading.Tasks.Task<GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmark> GetBookmarkAsync(string username, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/PostBookmark", ReplyAction="http://tempuri.org/IBookmarkService/PostBookmarkResponse")]
        void PostBookmark(string username, GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmark newValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/PostBookmark", ReplyAction="http://tempuri.org/IBookmarkService/PostBookmarkResponse")]
        System.Threading.Tasks.Task PostBookmarkAsync(string username, GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmark newValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/PutBookmark", ReplyAction="http://tempuri.org/IBookmarkService/PutBookmarkResponse")]
        void PutBookmark(string username, string id, GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmark bm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/PutBookmark", ReplyAction="http://tempuri.org/IBookmarkService/PutBookmarkResponse")]
        System.Threading.Tasks.Task PutBookmarkAsync(string username, string id, GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmark bm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/DeleteBookmark", ReplyAction="http://tempuri.org/IBookmarkService/DeleteBookmarkResponse")]
        void DeleteBookmark(string username, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookmarkService/DeleteBookmark", ReplyAction="http://tempuri.org/IBookmarkService/DeleteBookmarkResponse")]
        System.Threading.Tasks.Task DeleteBookmarkAsync(string username, string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBookmarkServiceChannel : GameEditor.Wcf.Harness.BookmarkServiceReference.IBookmarkService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookmarkServiceClient : System.ServiceModel.ClientBase<GameEditor.Wcf.Harness.BookmarkServiceReference.IBookmarkService>, GameEditor.Wcf.Harness.BookmarkServiceReference.IBookmarkService {
        
        public BookmarkServiceClient() {
        }
        
        public BookmarkServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BookmarkServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookmarkServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookmarkServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmarks GetPublicBookmarks(string tag) {
            return base.Channel.GetPublicBookmarks(tag);
        }
        
        public System.Threading.Tasks.Task<GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmarks> GetPublicBookmarksAsync(string tag) {
            return base.Channel.GetPublicBookmarksAsync(tag);
        }
        
        public GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmarks GetUserPublicBookmarks(string username, string tag) {
            return base.Channel.GetUserPublicBookmarks(username, tag);
        }
        
        public System.Threading.Tasks.Task<GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmarks> GetUserPublicBookmarksAsync(string username, string tag) {
            return base.Channel.GetUserPublicBookmarksAsync(username, tag);
        }
        
        public GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmarks GetUserBookmarks(string username, string tag) {
            return base.Channel.GetUserBookmarks(username, tag);
        }
        
        public System.Threading.Tasks.Task<GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmarks> GetUserBookmarksAsync(string username, string tag) {
            return base.Channel.GetUserBookmarksAsync(username, tag);
        }
        
        public GameEditor.Wcf.Harness.BookmarkServiceReference.UserProfile GetUserProfile(string username) {
            return base.Channel.GetUserProfile(username);
        }
        
        public System.Threading.Tasks.Task<GameEditor.Wcf.Harness.BookmarkServiceReference.UserProfile> GetUserProfileAsync(string username) {
            return base.Channel.GetUserProfileAsync(username);
        }
        
        public GameEditor.Wcf.Harness.BookmarkServiceReference.User GetUser(string username) {
            return base.Channel.GetUser(username);
        }
        
        public System.Threading.Tasks.Task<GameEditor.Wcf.Harness.BookmarkServiceReference.User> GetUserAsync(string username) {
            return base.Channel.GetUserAsync(username);
        }
        
        public void PutUser(string username, GameEditor.Wcf.Harness.BookmarkServiceReference.User user) {
            base.Channel.PutUser(username, user);
        }
        
        public System.Threading.Tasks.Task PutUserAsync(string username, GameEditor.Wcf.Harness.BookmarkServiceReference.User user) {
            return base.Channel.PutUserAsync(username, user);
        }
        
        public void DeleteUser(string username) {
            base.Channel.DeleteUser(username);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(string username) {
            return base.Channel.DeleteUserAsync(username);
        }
        
        public GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmark GetBookmark(string username, string id) {
            return base.Channel.GetBookmark(username, id);
        }
        
        public System.Threading.Tasks.Task<GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmark> GetBookmarkAsync(string username, string id) {
            return base.Channel.GetBookmarkAsync(username, id);
        }
        
        public void PostBookmark(string username, GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmark newValue) {
            base.Channel.PostBookmark(username, newValue);
        }
        
        public System.Threading.Tasks.Task PostBookmarkAsync(string username, GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmark newValue) {
            return base.Channel.PostBookmarkAsync(username, newValue);
        }
        
        public void PutBookmark(string username, string id, GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmark bm) {
            base.Channel.PutBookmark(username, id, bm);
        }
        
        public System.Threading.Tasks.Task PutBookmarkAsync(string username, string id, GameEditor.Wcf.Harness.BookmarkServiceReference.Bookmark bm) {
            return base.Channel.PutBookmarkAsync(username, id, bm);
        }
        
        public void DeleteBookmark(string username, string id) {
            base.Channel.DeleteBookmark(username, id);
        }
        
        public System.Threading.Tasks.Task DeleteBookmarkAsync(string username, string id) {
            return base.Channel.DeleteBookmarkAsync(username, id);
        }
    }
}
