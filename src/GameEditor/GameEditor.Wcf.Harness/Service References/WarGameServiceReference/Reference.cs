//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GameEditor.Wcf.Harness.WarGameServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/GameCore.WcfService")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri ArmiesLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri BattlesLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri IdLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri ArmiesLink {
            get {
                return this.ArmiesLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.ArmiesLinkField, value) != true)) {
                    this.ArmiesLinkField = value;
                    this.RaisePropertyChanged("ArmiesLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri BattlesLink {
            get {
                return this.BattlesLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.BattlesLinkField, value) != true)) {
                    this.BattlesLinkField = value;
                    this.RaisePropertyChanged("BattlesLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri IdLink {
            get {
                return this.IdLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.IdLinkField, value) != true)) {
                    this.IdLinkField = value;
                    this.RaisePropertyChanged("IdLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Battle", Namespace="http://schemas.datacontract.org/2004/07/GameCore.WcfService")]
    [System.SerializableAttribute()]
    public partial class Battle : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttackerUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri AttackerUserLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefenderUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri DefenderUserLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri IdLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttackerUser {
            get {
                return this.AttackerUserField;
            }
            set {
                if ((object.ReferenceEquals(this.AttackerUserField, value) != true)) {
                    this.AttackerUserField = value;
                    this.RaisePropertyChanged("AttackerUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri AttackerUserLink {
            get {
                return this.AttackerUserLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.AttackerUserLinkField, value) != true)) {
                    this.AttackerUserLinkField = value;
                    this.RaisePropertyChanged("AttackerUserLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefenderUser {
            get {
                return this.DefenderUserField;
            }
            set {
                if ((object.ReferenceEquals(this.DefenderUserField, value) != true)) {
                    this.DefenderUserField = value;
                    this.RaisePropertyChanged("DefenderUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri DefenderUserLink {
            get {
                return this.DefenderUserLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.DefenderUserLinkField, value) != true)) {
                    this.DefenderUserLinkField = value;
                    this.RaisePropertyChanged("DefenderUserLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri IdLink {
            get {
                return this.IdLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.IdLinkField, value) != true)) {
                    this.IdLinkField = value;
                    this.RaisePropertyChanged("IdLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Armies", Namespace="http://schemas.datacontract.org/2004/07/GameCore.WcfService", ItemName="Army")]
    [System.SerializableAttribute()]
    public class Armies : System.Collections.Generic.List<GameEditor.Wcf.Harness.WarGameServiceReference.Army> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Army", Namespace="http://schemas.datacontract.org/2004/07/GameCore.WcfService")]
    [System.SerializableAttribute()]
    public partial class Army : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri ArmyCommandsLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri IdLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri UserLinkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri ArmyCommandsLink {
            get {
                return this.ArmyCommandsLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.ArmyCommandsLinkField, value) != true)) {
                    this.ArmyCommandsLinkField = value;
                    this.RaisePropertyChanged("ArmyCommandsLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri IdLink {
            get {
                return this.IdLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.IdLinkField, value) != true)) {
                    this.IdLinkField = value;
                    this.RaisePropertyChanged("IdLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri UserLink {
            get {
                return this.UserLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLinkField, value) != true)) {
                    this.UserLinkField = value;
                    this.RaisePropertyChanged("UserLink");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArmyCommands", Namespace="http://schemas.datacontract.org/2004/07/GameCore.WcfService", ItemName="ArmyCommand")]
    [System.SerializableAttribute()]
    public class ArmyCommands : System.Collections.Generic.List<GameEditor.Wcf.Harness.WarGameServiceReference.ArmyCommand> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArmyCommand", Namespace="http://schemas.datacontract.org/2004/07/GameCore.WcfService")]
    [System.SerializableAttribute()]
    public partial class ArmyCommand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArmyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri ArmyGroupsLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri ArmyLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri IdLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBrokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFlankMarchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri UnitsLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri UserLinkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Army {
            get {
                return this.ArmyField;
            }
            set {
                if ((object.ReferenceEquals(this.ArmyField, value) != true)) {
                    this.ArmyField = value;
                    this.RaisePropertyChanged("Army");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri ArmyGroupsLink {
            get {
                return this.ArmyGroupsLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.ArmyGroupsLinkField, value) != true)) {
                    this.ArmyGroupsLinkField = value;
                    this.RaisePropertyChanged("ArmyGroupsLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri ArmyLink {
            get {
                return this.ArmyLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.ArmyLinkField, value) != true)) {
                    this.ArmyLinkField = value;
                    this.RaisePropertyChanged("ArmyLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri IdLink {
            get {
                return this.IdLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.IdLinkField, value) != true)) {
                    this.IdLinkField = value;
                    this.RaisePropertyChanged("IdLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBroken {
            get {
                return this.IsBrokenField;
            }
            set {
                if ((this.IsBrokenField.Equals(value) != true)) {
                    this.IsBrokenField = value;
                    this.RaisePropertyChanged("IsBroken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFlankMarch {
            get {
                return this.IsFlankMarchField;
            }
            set {
                if ((this.IsFlankMarchField.Equals(value) != true)) {
                    this.IsFlankMarchField = value;
                    this.RaisePropertyChanged("IsFlankMarch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri UnitsLink {
            get {
                return this.UnitsLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitsLinkField, value) != true)) {
                    this.UnitsLinkField = value;
                    this.RaisePropertyChanged("UnitsLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri UserLink {
            get {
                return this.UserLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLinkField, value) != true)) {
                    this.UserLinkField = value;
                    this.RaisePropertyChanged("UserLink");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArmyGroups", Namespace="http://schemas.datacontract.org/2004/07/GameCore.WcfService", ItemName="ArmyGroup")]
    [System.SerializableAttribute()]
    public class ArmyGroups : System.Collections.Generic.List<GameEditor.Wcf.Harness.WarGameServiceReference.ArmyGroup> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArmyGroup", Namespace="http://schemas.datacontract.org/2004/07/GameCore.WcfService")]
    [System.SerializableAttribute()]
    public partial class ArmyGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArmyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArmyCommandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri ArmyCommandLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri ArmyLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri IdLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnitFrontageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri UnitsLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri UserLinkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Army {
            get {
                return this.ArmyField;
            }
            set {
                if ((object.ReferenceEquals(this.ArmyField, value) != true)) {
                    this.ArmyField = value;
                    this.RaisePropertyChanged("Army");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArmyCommand {
            get {
                return this.ArmyCommandField;
            }
            set {
                if ((object.ReferenceEquals(this.ArmyCommandField, value) != true)) {
                    this.ArmyCommandField = value;
                    this.RaisePropertyChanged("ArmyCommand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri ArmyCommandLink {
            get {
                return this.ArmyCommandLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.ArmyCommandLinkField, value) != true)) {
                    this.ArmyCommandLinkField = value;
                    this.RaisePropertyChanged("ArmyCommandLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri ArmyLink {
            get {
                return this.ArmyLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.ArmyLinkField, value) != true)) {
                    this.ArmyLinkField = value;
                    this.RaisePropertyChanged("ArmyLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri IdLink {
            get {
                return this.IdLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.IdLinkField, value) != true)) {
                    this.IdLinkField = value;
                    this.RaisePropertyChanged("IdLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnitFrontage {
            get {
                return this.UnitFrontageField;
            }
            set {
                if ((this.UnitFrontageField.Equals(value) != true)) {
                    this.UnitFrontageField = value;
                    this.RaisePropertyChanged("UnitFrontage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri UnitsLink {
            get {
                return this.UnitsLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitsLinkField, value) != true)) {
                    this.UnitsLinkField = value;
                    this.RaisePropertyChanged("UnitsLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri UserLink {
            get {
                return this.UserLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLinkField, value) != true)) {
                    this.UserLinkField = value;
                    this.RaisePropertyChanged("UserLink");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Units", Namespace="http://schemas.datacontract.org/2004/07/GameCore.WcfService", ItemName="Unit")]
    [System.SerializableAttribute()]
    public class Units : System.Collections.Generic.List<GameEditor.Wcf.Harness.WarGameServiceReference.Unit> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Unit", Namespace="http://schemas.datacontract.org/2004/07/GameCore.WcfService")]
    [System.SerializableAttribute()]
    public partial class Unit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArmyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArmyCommandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri ArmyCommandLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArmyGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri ArmyGroupLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri ArmyLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri IdLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri UserLinkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Army {
            get {
                return this.ArmyField;
            }
            set {
                if ((object.ReferenceEquals(this.ArmyField, value) != true)) {
                    this.ArmyField = value;
                    this.RaisePropertyChanged("Army");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArmyCommand {
            get {
                return this.ArmyCommandField;
            }
            set {
                if ((object.ReferenceEquals(this.ArmyCommandField, value) != true)) {
                    this.ArmyCommandField = value;
                    this.RaisePropertyChanged("ArmyCommand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri ArmyCommandLink {
            get {
                return this.ArmyCommandLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.ArmyCommandLinkField, value) != true)) {
                    this.ArmyCommandLinkField = value;
                    this.RaisePropertyChanged("ArmyCommandLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArmyGroup {
            get {
                return this.ArmyGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.ArmyGroupField, value) != true)) {
                    this.ArmyGroupField = value;
                    this.RaisePropertyChanged("ArmyGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri ArmyGroupLink {
            get {
                return this.ArmyGroupLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.ArmyGroupLinkField, value) != true)) {
                    this.ArmyGroupLinkField = value;
                    this.RaisePropertyChanged("ArmyGroupLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri ArmyLink {
            get {
                return this.ArmyLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.ArmyLinkField, value) != true)) {
                    this.ArmyLinkField = value;
                    this.RaisePropertyChanged("ArmyLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri IdLink {
            get {
                return this.IdLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.IdLinkField, value) != true)) {
                    this.IdLinkField = value;
                    this.RaisePropertyChanged("IdLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitType {
            get {
                return this.UnitTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitTypeField, value) != true)) {
                    this.UnitTypeField = value;
                    this.RaisePropertyChanged("UnitType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri UserLink {
            get {
                return this.UserLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLinkField, value) != true)) {
                    this.UserLinkField = value;
                    this.RaisePropertyChanged("UserLink");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArmyDefinitions", Namespace="http://schemas.datacontract.org/2004/07/GameCore.WcfService", ItemName="ArmyDefinition")]
    [System.SerializableAttribute()]
    public class ArmyDefinitions : System.Collections.Generic.List<GameEditor.Wcf.Harness.WarGameServiceReference.ArmyDefinition> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArmyDefinition", Namespace="http://schemas.datacontract.org/2004/07/GameCore.WcfService")]
    [System.SerializableAttribute()]
    public partial class ArmyDefinition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArmyBookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArmyListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArmyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri IdLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArmyBook {
            get {
                return this.ArmyBookField;
            }
            set {
                if ((this.ArmyBookField.Equals(value) != true)) {
                    this.ArmyBookField = value;
                    this.RaisePropertyChanged("ArmyBook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArmyList {
            get {
                return this.ArmyListField;
            }
            set {
                if ((this.ArmyListField.Equals(value) != true)) {
                    this.ArmyListField = value;
                    this.RaisePropertyChanged("ArmyList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArmyName {
            get {
                return this.ArmyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArmyNameField, value) != true)) {
                    this.ArmyNameField = value;
                    this.RaisePropertyChanged("ArmyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri IdLink {
            get {
                return this.IdLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.IdLinkField, value) != true)) {
                    this.IdLinkField = value;
                    this.RaisePropertyChanged("IdLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxYear {
            get {
                return this.MaxYearField;
            }
            set {
                if ((this.MaxYearField.Equals(value) != true)) {
                    this.MaxYearField = value;
                    this.RaisePropertyChanged("MaxYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinYear {
            get {
                return this.MinYearField;
            }
            set {
                if ((this.MinYearField.Equals(value) != true)) {
                    this.MinYearField = value;
                    this.RaisePropertyChanged("MinYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArmyUnitDefinitions", Namespace="http://schemas.datacontract.org/2004/07/GameCore.WcfService", ItemName="ArmyUnitDefinition")]
    [System.SerializableAttribute()]
    public class ArmyUnitDefinitions : System.Collections.Generic.List<GameEditor.Wcf.Harness.WarGameServiceReference.ArmyUnitDefinition> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArmyUnitDefinition", Namespace="http://schemas.datacontract.org/2004/07/GameCore.WcfService")]
    [System.SerializableAttribute()]
    public partial class ArmyUnitDefinition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri IdLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAllyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsChariotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDoubleElementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGeneralField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMountedInfantryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri IdLink {
            get {
                return this.IdLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.IdLinkField, value) != true)) {
                    this.IdLinkField = value;
                    this.RaisePropertyChanged("IdLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAlly {
            get {
                return this.IsAllyField;
            }
            set {
                if ((this.IsAllyField.Equals(value) != true)) {
                    this.IsAllyField = value;
                    this.RaisePropertyChanged("IsAlly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsChariot {
            get {
                return this.IsChariotField;
            }
            set {
                if ((this.IsChariotField.Equals(value) != true)) {
                    this.IsChariotField = value;
                    this.RaisePropertyChanged("IsChariot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDoubleElement {
            get {
                return this.IsDoubleElementField;
            }
            set {
                if ((this.IsDoubleElementField.Equals(value) != true)) {
                    this.IsDoubleElementField = value;
                    this.RaisePropertyChanged("IsDoubleElement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGeneral {
            get {
                return this.IsGeneralField;
            }
            set {
                if ((this.IsGeneralField.Equals(value) != true)) {
                    this.IsGeneralField = value;
                    this.RaisePropertyChanged("IsGeneral");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMountedInfantry {
            get {
                return this.IsMountedInfantryField;
            }
            set {
                if ((this.IsMountedInfantryField.Equals(value) != true)) {
                    this.IsMountedInfantryField = value;
                    this.RaisePropertyChanged("IsMountedInfantry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxCount {
            get {
                return this.MaxCountField;
            }
            set {
                if ((this.MaxCountField.Equals(value) != true)) {
                    this.MaxCountField = value;
                    this.RaisePropertyChanged("MaxCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxYear {
            get {
                return this.MaxYearField;
            }
            set {
                if ((this.MaxYearField.Equals(value) != true)) {
                    this.MaxYearField = value;
                    this.RaisePropertyChanged("MaxYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinCount {
            get {
                return this.MinCountField;
            }
            set {
                if ((this.MinCountField.Equals(value) != true)) {
                    this.MinCountField = value;
                    this.RaisePropertyChanged("MinCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinYear {
            get {
                return this.MinYearField;
            }
            set {
                if ((this.MinYearField.Equals(value) != true)) {
                    this.MinYearField = value;
                    this.RaisePropertyChanged("MinYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitName {
            get {
                return this.UnitNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitNameField, value) != true)) {
                    this.UnitNameField = value;
                    this.RaisePropertyChanged("UnitName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WarGameServiceReference.IWarGameService")]
    public interface IWarGameService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetUser", ReplyAction="http://tempuri.org/IWarGameService/GetUserResponse")]
        GameEditor.Wcf.Harness.WarGameServiceReference.User GetUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetUser", ReplyAction="http://tempuri.org/IWarGameService/GetUserResponse")]
        System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.User> GetUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PutUser", ReplyAction="http://tempuri.org/IWarGameService/PutUserResponse")]
        void PutUser(string username, GameEditor.Wcf.Harness.WarGameServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PutUser", ReplyAction="http://tempuri.org/IWarGameService/PutUserResponse")]
        System.Threading.Tasks.Task PutUserAsync(string username, GameEditor.Wcf.Harness.WarGameServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/DeleteUser", ReplyAction="http://tempuri.org/IWarGameService/DeleteUserResponse")]
        void DeleteUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/DeleteUser", ReplyAction="http://tempuri.org/IWarGameService/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetBattle", ReplyAction="http://tempuri.org/IWarGameService/GetBattleResponse")]
        GameEditor.Wcf.Harness.WarGameServiceReference.Battle GetBattle(string username, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetBattle", ReplyAction="http://tempuri.org/IWarGameService/GetBattleResponse")]
        System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.Battle> GetBattleAsync(string username, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PostBattle", ReplyAction="http://tempuri.org/IWarGameService/PostBattleResponse")]
        void PostBattle(string username, string defendername, GameEditor.Wcf.Harness.WarGameServiceReference.Battle battle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PostBattle", ReplyAction="http://tempuri.org/IWarGameService/PostBattleResponse")]
        System.Threading.Tasks.Task PostBattleAsync(string username, string defendername, GameEditor.Wcf.Harness.WarGameServiceReference.Battle battle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PutBattle", ReplyAction="http://tempuri.org/IWarGameService/PutBattleResponse")]
        void PutBattle(string username, string defendername, string id, GameEditor.Wcf.Harness.WarGameServiceReference.Battle battle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PutBattle", ReplyAction="http://tempuri.org/IWarGameService/PutBattleResponse")]
        System.Threading.Tasks.Task PutBattleAsync(string username, string defendername, string id, GameEditor.Wcf.Harness.WarGameServiceReference.Battle battle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/DeleteBattle", ReplyAction="http://tempuri.org/IWarGameService/DeleteBattleResponse")]
        void DeleteBattle(string username, string defendername, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/DeleteBattle", ReplyAction="http://tempuri.org/IWarGameService/DeleteBattleResponse")]
        System.Threading.Tasks.Task DeleteBattleAsync(string username, string defendername, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetUserArmies", ReplyAction="http://tempuri.org/IWarGameService/GetUserArmiesResponse")]
        GameEditor.Wcf.Harness.WarGameServiceReference.Armies GetUserArmies(string username, string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetUserArmies", ReplyAction="http://tempuri.org/IWarGameService/GetUserArmiesResponse")]
        System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.Armies> GetUserArmiesAsync(string username, string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetArmy", ReplyAction="http://tempuri.org/IWarGameService/GetArmyResponse")]
        GameEditor.Wcf.Harness.WarGameServiceReference.Army GetArmy(string username, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetArmy", ReplyAction="http://tempuri.org/IWarGameService/GetArmyResponse")]
        System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.Army> GetArmyAsync(string username, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PostArmy", ReplyAction="http://tempuri.org/IWarGameService/PostArmyResponse")]
        void PostArmy(string username, GameEditor.Wcf.Harness.WarGameServiceReference.Army army);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PostArmy", ReplyAction="http://tempuri.org/IWarGameService/PostArmyResponse")]
        System.Threading.Tasks.Task PostArmyAsync(string username, GameEditor.Wcf.Harness.WarGameServiceReference.Army army);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PutArmy", ReplyAction="http://tempuri.org/IWarGameService/PutArmyResponse")]
        void PutArmy(string username, string id, GameEditor.Wcf.Harness.WarGameServiceReference.Army army);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PutArmy", ReplyAction="http://tempuri.org/IWarGameService/PutArmyResponse")]
        System.Threading.Tasks.Task PutArmyAsync(string username, string id, GameEditor.Wcf.Harness.WarGameServiceReference.Army army);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/DeleteArmy", ReplyAction="http://tempuri.org/IWarGameService/DeleteArmyResponse")]
        void DeleteArmy(string username, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/DeleteArmy", ReplyAction="http://tempuri.org/IWarGameService/DeleteArmyResponse")]
        System.Threading.Tasks.Task DeleteArmyAsync(string username, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetUserArmyCommands", ReplyAction="http://tempuri.org/IWarGameService/GetUserArmyCommandsResponse")]
        GameEditor.Wcf.Harness.WarGameServiceReference.ArmyCommands GetUserArmyCommands(string username, string armyId, string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetUserArmyCommands", ReplyAction="http://tempuri.org/IWarGameService/GetUserArmyCommandsResponse")]
        System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.ArmyCommands> GetUserArmyCommandsAsync(string username, string armyId, string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetArmyCommand", ReplyAction="http://tempuri.org/IWarGameService/GetArmyCommandResponse")]
        GameEditor.Wcf.Harness.WarGameServiceReference.ArmyCommand GetArmyCommand(string username, string armyId, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetArmyCommand", ReplyAction="http://tempuri.org/IWarGameService/GetArmyCommandResponse")]
        System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.ArmyCommand> GetArmyCommandAsync(string username, string armyId, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PostArmyCommand", ReplyAction="http://tempuri.org/IWarGameService/PostArmyCommandResponse")]
        void PostArmyCommand(string username, string armyId, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyCommand armyCommand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PostArmyCommand", ReplyAction="http://tempuri.org/IWarGameService/PostArmyCommandResponse")]
        System.Threading.Tasks.Task PostArmyCommandAsync(string username, string armyId, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyCommand armyCommand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PutArmyCommand", ReplyAction="http://tempuri.org/IWarGameService/PutArmyCommandResponse")]
        void PutArmyCommand(string username, string armyId, string id, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyCommand armyCommand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PutArmyCommand", ReplyAction="http://tempuri.org/IWarGameService/PutArmyCommandResponse")]
        System.Threading.Tasks.Task PutArmyCommandAsync(string username, string armyId, string id, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyCommand armyCommand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/DeleteArmyCommand", ReplyAction="http://tempuri.org/IWarGameService/DeleteArmyCommandResponse")]
        void DeleteArmyCommand(string username, string armyId, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/DeleteArmyCommand", ReplyAction="http://tempuri.org/IWarGameService/DeleteArmyCommandResponse")]
        System.Threading.Tasks.Task DeleteArmyCommandAsync(string username, string armyId, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetUserArmyGroups", ReplyAction="http://tempuri.org/IWarGameService/GetUserArmyGroupsResponse")]
        GameEditor.Wcf.Harness.WarGameServiceReference.ArmyGroups GetUserArmyGroups(string username, string armyId, string commandId, string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetUserArmyGroups", ReplyAction="http://tempuri.org/IWarGameService/GetUserArmyGroupsResponse")]
        System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.ArmyGroups> GetUserArmyGroupsAsync(string username, string armyId, string commandId, string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetArmyGroup", ReplyAction="http://tempuri.org/IWarGameService/GetArmyGroupResponse")]
        GameEditor.Wcf.Harness.WarGameServiceReference.ArmyGroup GetArmyGroup(string username, string armyId, string commandId, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetArmyGroup", ReplyAction="http://tempuri.org/IWarGameService/GetArmyGroupResponse")]
        System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.ArmyGroup> GetArmyGroupAsync(string username, string armyId, string commandId, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PostArmyGroup", ReplyAction="http://tempuri.org/IWarGameService/PostArmyGroupResponse")]
        void PostArmyGroup(string username, string armyId, string commandId, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyGroup armyGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PostArmyGroup", ReplyAction="http://tempuri.org/IWarGameService/PostArmyGroupResponse")]
        System.Threading.Tasks.Task PostArmyGroupAsync(string username, string armyId, string commandId, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyGroup armyGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PutArmyGroup", ReplyAction="http://tempuri.org/IWarGameService/PutArmyGroupResponse")]
        void PutArmyGroup(string username, string armyId, string commandId, string id, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyGroup armyGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PutArmyGroup", ReplyAction="http://tempuri.org/IWarGameService/PutArmyGroupResponse")]
        System.Threading.Tasks.Task PutArmyGroupAsync(string username, string armyId, string commandId, string id, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyGroup armyGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/DeleteArmyGroup", ReplyAction="http://tempuri.org/IWarGameService/DeleteArmyGroupResponse")]
        void DeleteArmyGroup(string username, string armyId, string commandId, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/DeleteArmyGroup", ReplyAction="http://tempuri.org/IWarGameService/DeleteArmyGroupResponse")]
        System.Threading.Tasks.Task DeleteArmyGroupAsync(string username, string armyId, string commandId, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetUserArmyUnits", ReplyAction="http://tempuri.org/IWarGameService/GetUserArmyUnitsResponse")]
        GameEditor.Wcf.Harness.WarGameServiceReference.Units GetUserArmyUnits(string username, string armyId, string commandId, string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetUserArmyUnits", ReplyAction="http://tempuri.org/IWarGameService/GetUserArmyUnitsResponse")]
        System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.Units> GetUserArmyUnitsAsync(string username, string armyId, string commandId, string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetUserArmyGroupUnits", ReplyAction="http://tempuri.org/IWarGameService/GetUserArmyGroupUnitsResponse")]
        GameEditor.Wcf.Harness.WarGameServiceReference.Units GetUserArmyGroupUnits(string username, string armyId, string commandId, string groupId, string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetUserArmyGroupUnits", ReplyAction="http://tempuri.org/IWarGameService/GetUserArmyGroupUnitsResponse")]
        System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.Units> GetUserArmyGroupUnitsAsync(string username, string armyId, string commandId, string groupId, string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetArmyUnit", ReplyAction="http://tempuri.org/IWarGameService/GetArmyUnitResponse")]
        GameEditor.Wcf.Harness.WarGameServiceReference.Unit GetArmyUnit(string username, string armyId, string commandId, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetArmyUnit", ReplyAction="http://tempuri.org/IWarGameService/GetArmyUnitResponse")]
        System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.Unit> GetArmyUnitAsync(string username, string armyId, string commandId, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PostArmyUnit", ReplyAction="http://tempuri.org/IWarGameService/PostArmyUnitResponse")]
        void PostArmyUnit(string username, string armyId, string commandId, GameEditor.Wcf.Harness.WarGameServiceReference.Unit unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PostArmyUnit", ReplyAction="http://tempuri.org/IWarGameService/PostArmyUnitResponse")]
        System.Threading.Tasks.Task PostArmyUnitAsync(string username, string armyId, string commandId, GameEditor.Wcf.Harness.WarGameServiceReference.Unit unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PutArmyUnit", ReplyAction="http://tempuri.org/IWarGameService/PutArmyUnitResponse")]
        void PutArmyUnit(string username, string armyId, string commandId, string id, GameEditor.Wcf.Harness.WarGameServiceReference.Unit unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PutArmyUnit", ReplyAction="http://tempuri.org/IWarGameService/PutArmyUnitResponse")]
        System.Threading.Tasks.Task PutArmyUnitAsync(string username, string armyId, string commandId, string id, GameEditor.Wcf.Harness.WarGameServiceReference.Unit unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/DeleteArmyUnit", ReplyAction="http://tempuri.org/IWarGameService/DeleteArmyUnitResponse")]
        void DeleteArmyUnit(string username, string armyId, string commandId, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/DeleteArmyUnit", ReplyAction="http://tempuri.org/IWarGameService/DeleteArmyUnitResponse")]
        System.Threading.Tasks.Task DeleteArmyUnitAsync(string username, string armyId, string commandId, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetArmyDefinitions", ReplyAction="http://tempuri.org/IWarGameService/GetArmyDefinitionsResponse")]
        GameEditor.Wcf.Harness.WarGameServiceReference.ArmyDefinitions GetArmyDefinitions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetArmyDefinitions", ReplyAction="http://tempuri.org/IWarGameService/GetArmyDefinitionsResponse")]
        System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.ArmyDefinitions> GetArmyDefinitionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetArmyDefinition", ReplyAction="http://tempuri.org/IWarGameService/GetArmyDefinitionResponse")]
        GameEditor.Wcf.Harness.WarGameServiceReference.ArmyDefinition GetArmyDefinition(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetArmyDefinition", ReplyAction="http://tempuri.org/IWarGameService/GetArmyDefinitionResponse")]
        System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.ArmyDefinition> GetArmyDefinitionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PostArmyDefinition", ReplyAction="http://tempuri.org/IWarGameService/PostArmyDefinitionResponse")]
        int PostArmyDefinition(GameEditor.Wcf.Harness.WarGameServiceReference.ArmyDefinition armyDefinition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PostArmyDefinition", ReplyAction="http://tempuri.org/IWarGameService/PostArmyDefinitionResponse")]
        System.Threading.Tasks.Task<int> PostArmyDefinitionAsync(GameEditor.Wcf.Harness.WarGameServiceReference.ArmyDefinition armyDefinition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PutArmyDefinition", ReplyAction="http://tempuri.org/IWarGameService/PutArmyDefinitionResponse")]
        int PutArmyDefinition(GameEditor.Wcf.Harness.WarGameServiceReference.ArmyDefinition armyDefinition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PutArmyDefinition", ReplyAction="http://tempuri.org/IWarGameService/PutArmyDefinitionResponse")]
        System.Threading.Tasks.Task<int> PutArmyDefinitionAsync(GameEditor.Wcf.Harness.WarGameServiceReference.ArmyDefinition armyDefinition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/DeleteArmyDefinition", ReplyAction="http://tempuri.org/IWarGameService/DeleteArmyDefinitionResponse")]
        void DeleteArmyDefinition(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/DeleteArmyDefinition", ReplyAction="http://tempuri.org/IWarGameService/DeleteArmyDefinitionResponse")]
        System.Threading.Tasks.Task DeleteArmyDefinitionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetArmyUnitDefinitions", ReplyAction="http://tempuri.org/IWarGameService/GetArmyUnitDefinitionsResponse")]
        GameEditor.Wcf.Harness.WarGameServiceReference.ArmyUnitDefinitions GetArmyUnitDefinitions(string armyDefinitionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetArmyUnitDefinitions", ReplyAction="http://tempuri.org/IWarGameService/GetArmyUnitDefinitionsResponse")]
        System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.ArmyUnitDefinitions> GetArmyUnitDefinitionsAsync(string armyDefinitionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetArmyUnitDefinition", ReplyAction="http://tempuri.org/IWarGameService/GetArmyUnitDefinitionResponse")]
        GameEditor.Wcf.Harness.WarGameServiceReference.ArmyUnitDefinition GetArmyUnitDefinition(string armyDefinitionId, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/GetArmyUnitDefinition", ReplyAction="http://tempuri.org/IWarGameService/GetArmyUnitDefinitionResponse")]
        System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.ArmyUnitDefinition> GetArmyUnitDefinitionAsync(string armyDefinitionId, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PostArmyUnitDefinition", ReplyAction="http://tempuri.org/IWarGameService/PostArmyUnitDefinitionResponse")]
        void PostArmyUnitDefinition(string armyDefinitionId, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyUnitDefinition armyUnitDefinition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PostArmyUnitDefinition", ReplyAction="http://tempuri.org/IWarGameService/PostArmyUnitDefinitionResponse")]
        System.Threading.Tasks.Task PostArmyUnitDefinitionAsync(string armyDefinitionId, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyUnitDefinition armyUnitDefinition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PutArmyUnitDefinition", ReplyAction="http://tempuri.org/IWarGameService/PutArmyUnitDefinitionResponse")]
        void PutArmyUnitDefinition(string armyDefinitionId, string id, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyUnitDefinition armyUnitDefinition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/PutArmyUnitDefinition", ReplyAction="http://tempuri.org/IWarGameService/PutArmyUnitDefinitionResponse")]
        System.Threading.Tasks.Task PutArmyUnitDefinitionAsync(string armyDefinitionId, string id, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyUnitDefinition armyUnitDefinition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/DeleteArmyUnitDefinition", ReplyAction="http://tempuri.org/IWarGameService/DeleteArmyUnitDefinitionResponse")]
        void DeleteArmyUnitDefinition(string armyDefinitionId, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarGameService/DeleteArmyUnitDefinition", ReplyAction="http://tempuri.org/IWarGameService/DeleteArmyUnitDefinitionResponse")]
        System.Threading.Tasks.Task DeleteArmyUnitDefinitionAsync(string armyDefinitionId, string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWarGameServiceChannel : GameEditor.Wcf.Harness.WarGameServiceReference.IWarGameService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WarGameServiceClient : System.ServiceModel.ClientBase<GameEditor.Wcf.Harness.WarGameServiceReference.IWarGameService>, GameEditor.Wcf.Harness.WarGameServiceReference.IWarGameService {
        
        public WarGameServiceClient() {
        }
        
        public WarGameServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WarGameServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WarGameServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WarGameServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GameEditor.Wcf.Harness.WarGameServiceReference.User GetUser(string username) {
            return base.Channel.GetUser(username);
        }
        
        public System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.User> GetUserAsync(string username) {
            return base.Channel.GetUserAsync(username);
        }
        
        public void PutUser(string username, GameEditor.Wcf.Harness.WarGameServiceReference.User user) {
            base.Channel.PutUser(username, user);
        }
        
        public System.Threading.Tasks.Task PutUserAsync(string username, GameEditor.Wcf.Harness.WarGameServiceReference.User user) {
            return base.Channel.PutUserAsync(username, user);
        }
        
        public void DeleteUser(string username) {
            base.Channel.DeleteUser(username);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(string username) {
            return base.Channel.DeleteUserAsync(username);
        }
        
        public GameEditor.Wcf.Harness.WarGameServiceReference.Battle GetBattle(string username, string id) {
            return base.Channel.GetBattle(username, id);
        }
        
        public System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.Battle> GetBattleAsync(string username, string id) {
            return base.Channel.GetBattleAsync(username, id);
        }
        
        public void PostBattle(string username, string defendername, GameEditor.Wcf.Harness.WarGameServiceReference.Battle battle) {
            base.Channel.PostBattle(username, defendername, battle);
        }
        
        public System.Threading.Tasks.Task PostBattleAsync(string username, string defendername, GameEditor.Wcf.Harness.WarGameServiceReference.Battle battle) {
            return base.Channel.PostBattleAsync(username, defendername, battle);
        }
        
        public void PutBattle(string username, string defendername, string id, GameEditor.Wcf.Harness.WarGameServiceReference.Battle battle) {
            base.Channel.PutBattle(username, defendername, id, battle);
        }
        
        public System.Threading.Tasks.Task PutBattleAsync(string username, string defendername, string id, GameEditor.Wcf.Harness.WarGameServiceReference.Battle battle) {
            return base.Channel.PutBattleAsync(username, defendername, id, battle);
        }
        
        public void DeleteBattle(string username, string defendername, string id) {
            base.Channel.DeleteBattle(username, defendername, id);
        }
        
        public System.Threading.Tasks.Task DeleteBattleAsync(string username, string defendername, string id) {
            return base.Channel.DeleteBattleAsync(username, defendername, id);
        }
        
        public GameEditor.Wcf.Harness.WarGameServiceReference.Armies GetUserArmies(string username, string tag) {
            return base.Channel.GetUserArmies(username, tag);
        }
        
        public System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.Armies> GetUserArmiesAsync(string username, string tag) {
            return base.Channel.GetUserArmiesAsync(username, tag);
        }
        
        public GameEditor.Wcf.Harness.WarGameServiceReference.Army GetArmy(string username, string id) {
            return base.Channel.GetArmy(username, id);
        }
        
        public System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.Army> GetArmyAsync(string username, string id) {
            return base.Channel.GetArmyAsync(username, id);
        }
        
        public void PostArmy(string username, GameEditor.Wcf.Harness.WarGameServiceReference.Army army) {
            base.Channel.PostArmy(username, army);
        }
        
        public System.Threading.Tasks.Task PostArmyAsync(string username, GameEditor.Wcf.Harness.WarGameServiceReference.Army army) {
            return base.Channel.PostArmyAsync(username, army);
        }
        
        public void PutArmy(string username, string id, GameEditor.Wcf.Harness.WarGameServiceReference.Army army) {
            base.Channel.PutArmy(username, id, army);
        }
        
        public System.Threading.Tasks.Task PutArmyAsync(string username, string id, GameEditor.Wcf.Harness.WarGameServiceReference.Army army) {
            return base.Channel.PutArmyAsync(username, id, army);
        }
        
        public void DeleteArmy(string username, string id) {
            base.Channel.DeleteArmy(username, id);
        }
        
        public System.Threading.Tasks.Task DeleteArmyAsync(string username, string id) {
            return base.Channel.DeleteArmyAsync(username, id);
        }
        
        public GameEditor.Wcf.Harness.WarGameServiceReference.ArmyCommands GetUserArmyCommands(string username, string armyId, string tag) {
            return base.Channel.GetUserArmyCommands(username, armyId, tag);
        }
        
        public System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.ArmyCommands> GetUserArmyCommandsAsync(string username, string armyId, string tag) {
            return base.Channel.GetUserArmyCommandsAsync(username, armyId, tag);
        }
        
        public GameEditor.Wcf.Harness.WarGameServiceReference.ArmyCommand GetArmyCommand(string username, string armyId, string id) {
            return base.Channel.GetArmyCommand(username, armyId, id);
        }
        
        public System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.ArmyCommand> GetArmyCommandAsync(string username, string armyId, string id) {
            return base.Channel.GetArmyCommandAsync(username, armyId, id);
        }
        
        public void PostArmyCommand(string username, string armyId, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyCommand armyCommand) {
            base.Channel.PostArmyCommand(username, armyId, armyCommand);
        }
        
        public System.Threading.Tasks.Task PostArmyCommandAsync(string username, string armyId, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyCommand armyCommand) {
            return base.Channel.PostArmyCommandAsync(username, armyId, armyCommand);
        }
        
        public void PutArmyCommand(string username, string armyId, string id, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyCommand armyCommand) {
            base.Channel.PutArmyCommand(username, armyId, id, armyCommand);
        }
        
        public System.Threading.Tasks.Task PutArmyCommandAsync(string username, string armyId, string id, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyCommand armyCommand) {
            return base.Channel.PutArmyCommandAsync(username, armyId, id, armyCommand);
        }
        
        public void DeleteArmyCommand(string username, string armyId, string id) {
            base.Channel.DeleteArmyCommand(username, armyId, id);
        }
        
        public System.Threading.Tasks.Task DeleteArmyCommandAsync(string username, string armyId, string id) {
            return base.Channel.DeleteArmyCommandAsync(username, armyId, id);
        }
        
        public GameEditor.Wcf.Harness.WarGameServiceReference.ArmyGroups GetUserArmyGroups(string username, string armyId, string commandId, string tag) {
            return base.Channel.GetUserArmyGroups(username, armyId, commandId, tag);
        }
        
        public System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.ArmyGroups> GetUserArmyGroupsAsync(string username, string armyId, string commandId, string tag) {
            return base.Channel.GetUserArmyGroupsAsync(username, armyId, commandId, tag);
        }
        
        public GameEditor.Wcf.Harness.WarGameServiceReference.ArmyGroup GetArmyGroup(string username, string armyId, string commandId, string id) {
            return base.Channel.GetArmyGroup(username, armyId, commandId, id);
        }
        
        public System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.ArmyGroup> GetArmyGroupAsync(string username, string armyId, string commandId, string id) {
            return base.Channel.GetArmyGroupAsync(username, armyId, commandId, id);
        }
        
        public void PostArmyGroup(string username, string armyId, string commandId, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyGroup armyGroup) {
            base.Channel.PostArmyGroup(username, armyId, commandId, armyGroup);
        }
        
        public System.Threading.Tasks.Task PostArmyGroupAsync(string username, string armyId, string commandId, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyGroup armyGroup) {
            return base.Channel.PostArmyGroupAsync(username, armyId, commandId, armyGroup);
        }
        
        public void PutArmyGroup(string username, string armyId, string commandId, string id, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyGroup armyGroup) {
            base.Channel.PutArmyGroup(username, armyId, commandId, id, armyGroup);
        }
        
        public System.Threading.Tasks.Task PutArmyGroupAsync(string username, string armyId, string commandId, string id, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyGroup armyGroup) {
            return base.Channel.PutArmyGroupAsync(username, armyId, commandId, id, armyGroup);
        }
        
        public void DeleteArmyGroup(string username, string armyId, string commandId, string id) {
            base.Channel.DeleteArmyGroup(username, armyId, commandId, id);
        }
        
        public System.Threading.Tasks.Task DeleteArmyGroupAsync(string username, string armyId, string commandId, string id) {
            return base.Channel.DeleteArmyGroupAsync(username, armyId, commandId, id);
        }
        
        public GameEditor.Wcf.Harness.WarGameServiceReference.Units GetUserArmyUnits(string username, string armyId, string commandId, string tag) {
            return base.Channel.GetUserArmyUnits(username, armyId, commandId, tag);
        }
        
        public System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.Units> GetUserArmyUnitsAsync(string username, string armyId, string commandId, string tag) {
            return base.Channel.GetUserArmyUnitsAsync(username, armyId, commandId, tag);
        }
        
        public GameEditor.Wcf.Harness.WarGameServiceReference.Units GetUserArmyGroupUnits(string username, string armyId, string commandId, string groupId, string tag) {
            return base.Channel.GetUserArmyGroupUnits(username, armyId, commandId, groupId, tag);
        }
        
        public System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.Units> GetUserArmyGroupUnitsAsync(string username, string armyId, string commandId, string groupId, string tag) {
            return base.Channel.GetUserArmyGroupUnitsAsync(username, armyId, commandId, groupId, tag);
        }
        
        public GameEditor.Wcf.Harness.WarGameServiceReference.Unit GetArmyUnit(string username, string armyId, string commandId, string id) {
            return base.Channel.GetArmyUnit(username, armyId, commandId, id);
        }
        
        public System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.Unit> GetArmyUnitAsync(string username, string armyId, string commandId, string id) {
            return base.Channel.GetArmyUnitAsync(username, armyId, commandId, id);
        }
        
        public void PostArmyUnit(string username, string armyId, string commandId, GameEditor.Wcf.Harness.WarGameServiceReference.Unit unit) {
            base.Channel.PostArmyUnit(username, armyId, commandId, unit);
        }
        
        public System.Threading.Tasks.Task PostArmyUnitAsync(string username, string armyId, string commandId, GameEditor.Wcf.Harness.WarGameServiceReference.Unit unit) {
            return base.Channel.PostArmyUnitAsync(username, armyId, commandId, unit);
        }
        
        public void PutArmyUnit(string username, string armyId, string commandId, string id, GameEditor.Wcf.Harness.WarGameServiceReference.Unit unit) {
            base.Channel.PutArmyUnit(username, armyId, commandId, id, unit);
        }
        
        public System.Threading.Tasks.Task PutArmyUnitAsync(string username, string armyId, string commandId, string id, GameEditor.Wcf.Harness.WarGameServiceReference.Unit unit) {
            return base.Channel.PutArmyUnitAsync(username, armyId, commandId, id, unit);
        }
        
        public void DeleteArmyUnit(string username, string armyId, string commandId, string id) {
            base.Channel.DeleteArmyUnit(username, armyId, commandId, id);
        }
        
        public System.Threading.Tasks.Task DeleteArmyUnitAsync(string username, string armyId, string commandId, string id) {
            return base.Channel.DeleteArmyUnitAsync(username, armyId, commandId, id);
        }
        
        public GameEditor.Wcf.Harness.WarGameServiceReference.ArmyDefinitions GetArmyDefinitions() {
            return base.Channel.GetArmyDefinitions();
        }
        
        public System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.ArmyDefinitions> GetArmyDefinitionsAsync() {
            return base.Channel.GetArmyDefinitionsAsync();
        }
        
        public GameEditor.Wcf.Harness.WarGameServiceReference.ArmyDefinition GetArmyDefinition(int id) {
            return base.Channel.GetArmyDefinition(id);
        }
        
        public System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.ArmyDefinition> GetArmyDefinitionAsync(int id) {
            return base.Channel.GetArmyDefinitionAsync(id);
        }
        
        public int PostArmyDefinition(GameEditor.Wcf.Harness.WarGameServiceReference.ArmyDefinition armyDefinition) {
            return base.Channel.PostArmyDefinition(armyDefinition);
        }
        
        public System.Threading.Tasks.Task<int> PostArmyDefinitionAsync(GameEditor.Wcf.Harness.WarGameServiceReference.ArmyDefinition armyDefinition) {
            return base.Channel.PostArmyDefinitionAsync(armyDefinition);
        }
        
        public int PutArmyDefinition(GameEditor.Wcf.Harness.WarGameServiceReference.ArmyDefinition armyDefinition) {
            return base.Channel.PutArmyDefinition(armyDefinition);
        }
        
        public System.Threading.Tasks.Task<int> PutArmyDefinitionAsync(GameEditor.Wcf.Harness.WarGameServiceReference.ArmyDefinition armyDefinition) {
            return base.Channel.PutArmyDefinitionAsync(armyDefinition);
        }
        
        public void DeleteArmyDefinition(int id) {
            base.Channel.DeleteArmyDefinition(id);
        }
        
        public System.Threading.Tasks.Task DeleteArmyDefinitionAsync(int id) {
            return base.Channel.DeleteArmyDefinitionAsync(id);
        }
        
        public GameEditor.Wcf.Harness.WarGameServiceReference.ArmyUnitDefinitions GetArmyUnitDefinitions(string armyDefinitionId) {
            return base.Channel.GetArmyUnitDefinitions(armyDefinitionId);
        }
        
        public System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.ArmyUnitDefinitions> GetArmyUnitDefinitionsAsync(string armyDefinitionId) {
            return base.Channel.GetArmyUnitDefinitionsAsync(armyDefinitionId);
        }
        
        public GameEditor.Wcf.Harness.WarGameServiceReference.ArmyUnitDefinition GetArmyUnitDefinition(string armyDefinitionId, string id) {
            return base.Channel.GetArmyUnitDefinition(armyDefinitionId, id);
        }
        
        public System.Threading.Tasks.Task<GameEditor.Wcf.Harness.WarGameServiceReference.ArmyUnitDefinition> GetArmyUnitDefinitionAsync(string armyDefinitionId, string id) {
            return base.Channel.GetArmyUnitDefinitionAsync(armyDefinitionId, id);
        }
        
        public void PostArmyUnitDefinition(string armyDefinitionId, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyUnitDefinition armyUnitDefinition) {
            base.Channel.PostArmyUnitDefinition(armyDefinitionId, armyUnitDefinition);
        }
        
        public System.Threading.Tasks.Task PostArmyUnitDefinitionAsync(string armyDefinitionId, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyUnitDefinition armyUnitDefinition) {
            return base.Channel.PostArmyUnitDefinitionAsync(armyDefinitionId, armyUnitDefinition);
        }
        
        public void PutArmyUnitDefinition(string armyDefinitionId, string id, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyUnitDefinition armyUnitDefinition) {
            base.Channel.PutArmyUnitDefinition(armyDefinitionId, id, armyUnitDefinition);
        }
        
        public System.Threading.Tasks.Task PutArmyUnitDefinitionAsync(string armyDefinitionId, string id, GameEditor.Wcf.Harness.WarGameServiceReference.ArmyUnitDefinition armyUnitDefinition) {
            return base.Channel.PutArmyUnitDefinitionAsync(armyDefinitionId, id, armyUnitDefinition);
        }
        
        public void DeleteArmyUnitDefinition(string armyDefinitionId, string id) {
            base.Channel.DeleteArmyUnitDefinition(armyDefinitionId, id);
        }
        
        public System.Threading.Tasks.Task DeleteArmyUnitDefinitionAsync(string armyDefinitionId, string id) {
            return base.Channel.DeleteArmyUnitDefinitionAsync(armyDefinitionId, id);
        }
    }
}
